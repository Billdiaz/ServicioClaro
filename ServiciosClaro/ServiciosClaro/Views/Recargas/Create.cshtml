@model ServiciosClaro.Recargas

@{
    ViewBag.Title = "Create";
}

<h2>Ágregar Recarga</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Lugar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lugar, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lugar, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (!User.IsInRole("Cliente"))
        {

            <div class="form-group">
                @Html.LabelFor(model => model.Cliente, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Cliente", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>
            </div>

                }
                else
                {
                    int cliente = Convert.ToInt32(Session["ID"]);
                    <input type="number" value="@cliente" class="hide" name="Cliente" id="Cliente" hidden />
                }


        @*<div class="form-group">
            @Html.LabelFor(model => model.Tarea, "Tarea", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Tarea", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Tarea, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <input type="number" value="1" class="hide form-control" name="Tarea" id="tarea" hidden />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Agregar" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index", null, new { @Class = "text-danger" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
